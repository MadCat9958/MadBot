import discord
import datetime
import aiohttp
import random
import logging
import time

from asyncio import sleep
from discord import app_commands
from discord.ext import commands
from random import choice
from typing import List

from config import *
from classes import checks

logger = logging.getLogger('discord')

class Entartaiment(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @app_commands.command(name="cat", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∫–æ—Ç–∏–∫–∞")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    async def cat(self, interaction: discord.Interaction):
        resp = await aiohttp.ClientSession().get(f"https://some-random-api.com/animal/cat?key={settings['key']}")
        json = await resp.json()
        if resp.status == 200:
            embed = discord.Embed(title="–ú—è—É!", color=discord.Color.orange())
            embed.set_image(url=json['image'])
            await interaction.response.send_message(embed=embed)
        else:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description=f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!\n–ö–æ–¥ –æ—à–∏–±–∫–∏: `{resp.status_code}`")
            await interaction.response.send_message(embed=embed, ephemeral=True)

    @app_commands.command(name="dog", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –ø—ë—Å–∏–∫–∞")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    async def dog(self, interaction: discord.Interaction):
        resp = await aiohttp.ClientSession().get(f"https://some-random-api.com/animal/dog?key={settings['key']}")
        json = await resp.json()
        if resp.status == 200:
            embed = discord.Embed(title="–ì–∞–≤!", color=discord.Color.orange())
            embed.set_image(url=json['image'])
            await interaction.response.send_message(embed=embed)
        else:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description=f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!\n–ö–æ–¥ –æ—à–∏–±–∫–∏: `{resp.status_code}`")
            await interaction.response.send_message(embed=embed, ephemeral=True)

    @app_commands.command(name="math", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –†–µ—à–∏ –Ω–µ—Å–ª–æ–∂–Ω—ã–π –ø—Ä–∏–º–µ—Ä –Ω–∞ —Å–ª–æ–∂–µ–Ω–∏–µ/–≤—ã—á–∏—Ç–∞–Ω–∏–µ")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    async def math_cmd(self, interaction: discord.Interaction):
        choice = ['+','-']
        tosolve = f"{random.randint(9,99)} {random.choice(choice)} {random.randint(9,99)}"
        answer = eval(tosolve)
        start = time.time()





        class Button(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=15)
                self.value = None

            @discord.ui.button(label="–û—Ç–≤–µ—Ç–∏—Ç—å", style=discord.ButtonStyle.blurple)
            async def solve(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user != interaction.user:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)




                class InputText(discord.ui.Modal, title=f"–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç {tosolve}?"):
                    ans = discord.ui.TextInput(label="–û—Ç–≤–µ—Ç", style=discord.TextStyle.short, required=True, placeholder="14", max_length=4)
                    async def on_submit(self, modalinteract: discord.Interaction):
                        wasted = round(time.time() - start, 3)
                        if wasted > 15:
                            embed = discord.Embed(
                                title="–û—à–∏–±–∫–∞!",
                                color=discord.Color.red(),
                                description="–í—Ä–µ–º—è –≤—ã—à–ª–æ!"
                            )
                            return await modalinteract.response.send_message(embed=embed, ephemeral=True)
                        try:
                            temp = int(str(self.ans))
                        except:
                            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ!")
                            embed1 = discord.Embed(title="–û—Ç–≤–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π!", color=discord.Color.red(), description=f"–ü—Ä–∏–º–µ—Ä: `{tosolve}`.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: `{answer}`.")
                            await interaction.edit_original_response(embed=embed1, view=None)
                            return await modalinteract.response.send_message(embed=embed, ephemeral=True)
                        if int(str(self.ans)) == int(answer):
                            embed = discord.Embed(title="–ü—Ä–∞–≤–∏–ª—å–Ω–æ!", color=discord.Color.green(), description=f"–û—Ç–≤–µ—Ç: `{answer}`. –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: `{wasted}s`.")
                        else:
                            embed = discord.Embed(title="–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!", color=discord.Color.red(), description=f"–í–∞—à –æ—Ç–≤–µ—Ç: `{self.ans}`\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: `{answer}`.")
                        embed.set_footer(text=interaction.user, icon_url=interaction.user.display_avatar.url)
                        await interaction.edit_original_response(view=None)
                        await modalinteract.response.send_message(embed=embed)


                await viewinteract.response.send_modal(InputText())

            


        embed = discord.Embed(title="–†–µ—à–∏ –ø—Ä–∏–º–µ—Ä!", color=discord.Color.orange(), description=f"`{tosolve}`\n–í—Ä–µ–º—è –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ: `15 —Å–µ–∫—É–Ω–¥`.")
        embed.set_footer(text=interaction.user, icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed, view=Button())
        await sleep(15)
        await interaction.edit_original_response(view=None)

    @app_commands.command(name="doors", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –£–≥–∞–¥–∞–π –¥–≤–µ—Ä—å.")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    async def doors(self, interaction: discord.Interaction):
        class DoorsButtons(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=15)
                self.value = None

            @discord.ui.button(label="1", emoji="üö™", style=discord.ButtonStyle.green)
            async def button_one(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if interaction.user != viewinteract.user:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)

                answer = random.randint(0,3)
                if answer == int(button.label):
                    embed = discord.Embed(title="–£–≥–∞–¥–∞–ª!", color=discord.Color.green(), description="–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–≤–µ—Ä—å: `–ü–µ—Ä–≤–∞—è`.")
                else:
                    rightans = None
                    rightans = "–í—Ç–æ—Ä–∞—è" if answer == 2 else "–¢—Ä–µ—Ç—å—è"
                    embed = discord.Embed(title="–ù–µ —É–≥–∞–¥–∞–ª!", color=discord.Color.red(), description=f"–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ `–ü–µ—Ä–≤—É—é` –¥–≤–µ—Ä—å.\n–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–≤–µ—Ä—å: `{rightans}`.")
                embed.set_footer(text=viewinteract.user, icon_url=viewinteract.user.display_avatar.url)
                await interaction.edit_original_response(embeds=[embed], view=None)
                self.value = 1

            @discord.ui.button(label="2", emoji="üö™", style=discord.ButtonStyle.green)
            async def button_two(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if interaction.user != viewinteract.user:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)

                answer = random.randint(0,3)
                if answer == int(button.label):
                    embed = discord.Embed(title="–£–≥–∞–¥–∞–ª!", color=discord.Color.green(), description="–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–≤–µ—Ä—å: `–í—Ç–æ—Ä–∞—è`.")
                else:
                    rightans = None
                    rightans = "–ü–µ—Ä–≤–∞—è" if answer == 1 else "–¢—Ä–µ—Ç—å—è"
                    embed = discord.Embed(title="–ù–µ —É–≥–∞–¥–∞–ª!", color=discord.Color.red(), description=f"–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ `–í—Ç–æ—Ä—É—é` –¥–≤–µ—Ä—å.\n–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–≤–µ—Ä—å: `{rightans}`.")
                embed.set_footer(text=viewinteract.user, icon_url=viewinteract.user.display_avatar.url)
                await interaction.edit_original_response(embeds=[embed], view=None)
                self.value = 2

            @discord.ui.button(label="3", emoji="üö™", style=discord.ButtonStyle.green)
            async def button_three(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if interaction.user != viewinteract.user:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)

                answer = random.randint(0,3)
                if answer == int(button.label):
                    embed = discord.Embed(title="–£–≥–∞–¥–∞–ª!", color=discord.Color.green(), description="–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–≤–µ—Ä—å: `–¢—Ä–µ—Ç—å—è`.")
                else:
                    rightans = None
                    rightans = "–í—Ç–æ—Ä–∞—è" if answer == 2 else "–ü–µ—Ä–≤–∞—è"
                    embed = discord.Embed(title="–ù–µ —É–≥–∞–¥–∞–ª!", color=discord.Color.red(), description=f"–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ `–¢—Ä–µ—Ç—å—é` –¥–≤–µ—Ä—å.\n–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–≤–µ—Ä—å: `{rightans}`.")
                embed.set_footer(text=viewinteract.user, icon_url=viewinteract.user.display_avatar.url)
                await interaction.edit_original_response(embeds=[embed], view=None)
                self.value = 3


        view = DoorsButtons()
        embed = discord.Embed(title="–í—ã–±–µ—Ä–∏ –¥–≤–µ—Ä—å:", color=discord.Color.orange(), description="–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ. –í—Ä–µ–º—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ (`15` —Å–µ–∫—É–Ω–¥).")
        embed.set_footer(text=interaction.user, icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed, view=view)
        await view.wait()
        if view.value is None:
            embed = discord.Embed(title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!", color=discord.Color.red())
            return await interaction.edit_original_response(embed=embed, view=None)

    @app_commands.command(name="ball", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä.")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    @app_commands.describe(question="–í–æ–ø—Ä–æ—Å, –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–π —à–∞—Ä—É.")
    async def ball(self, interaction: discord.Interaction, question: app_commands.Range[str, None, 1024]):
        answers = [
            "–ë–µ—Å—Å–ø–æ—Ä–Ω–æ",
            "–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ",
            "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π",
            "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞",
            "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º",
            "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è ‚Äî ¬´–¥–∞¬ª",
            "–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ",
            "–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã",
            "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç ‚Äî ¬´–¥–∞¬ª",
            "–î–∞",
            "–ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞",
            "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ",
            "–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å",
            "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å",
            "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å",
            "–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π",
            "–ú–æ–π –æ—Ç–≤–µ—Ç ‚Äî ¬´–Ω–µ—Ç¬ª",
            "–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º ‚Äî ¬´–Ω–µ—Ç¬ª",
            "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ",
            "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ"
        ]
        embed = discord.Embed(title="–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä", color=discord.Color.orange(), timestamp=datetime.datetime.now())
        embed.add_field(name="–í–∞—à –≤–æ–ø—Ä–æ—Å:", value=question, inline=False)
        embed.add_field(name="–û—Ç–≤–µ—Ç —à–∞—Ä–∞:", value=random.choice(answers), inline=False)
        embed.set_author(name=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        embed.set_thumbnail(url="https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Magic_eight_ball.png/800px-Magic_eight_ball.png")
        await interaction.response.send_message(embed=embed)

    @app_commands.command(name='knb', description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞.")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å.")
    async def knb(self, interaction: discord.Interaction, member: discord.User = None):
        if member is None:
            member = self.bot.user
        if interaction.guild is None:
            embed=discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!")
            embed.set_thumbnail(url=interaction.user.avatar.url)
            return await interaction.response.send_message(embed=embed, ephemeral=True)

        if interaction.user.id == member.id:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        if member.bot and member.id != settings["app_id"]:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ë–æ—Ç—É –Ω–µ –¥–æ –∏–≥—Ä, –Ω–µ —Ç—Ä–µ–≤–æ–∂—å –µ–≥–æ!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        class Approval(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=180)
                self.value = None

            @discord.ui.button(emoji="‚úÖ", style=discord.ButtonStyle.green)
            async def accept(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != member.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                self.value = True
                await viewinteract.response.edit_message(view=None)
                self.stop()

            @discord.ui.button(emoji="<:x_icon:975324570741526568>", style=discord.ButtonStyle.red)
            async def deny(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if interaction.user.id == viewinteract.user.id:
                    embed = discord.Embed(title="–û—Ç–º–µ–Ω–∞!", color=discord.Color.red(), description="–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∏–≥—Ä—ã –æ—Ç–º–µ–Ω–∏–ª –µ—ë.")
                    await viewinteract.response.edit_message(embed=embed, view=None)
                    self.value = False
                    self.stop()
                elif member.id == viewinteract.user.id:
                    embed = discord.Embed(title="–û—Ç–∫–∞–∑!", color=discord.Color.red(), description=f"{member.mention} –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∏–≥—Ä—ã.")
                    await viewinteract.response.edit_message(embed=embed, view=None)
                    self.value = False
                    self.stop()
                else:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
        if member != self.bot.user:
            embed = discord.Embed(title="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –û–∂–∏–¥–∞–Ω–∏–µ", color=discord.Color.orange(), description=f"–í—ã —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å —Å {member.mention}. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ/–µ—ë —Å–æ–≥–ª–∞—Å–∏–µ. –í—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç: `3 –º–∏–Ω—É—Ç—ã`.")
            embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
            appr = Approval()
            await interaction.response.send_message(embed=embed, view=appr)
            await appr.wait()
        if member != self.bot.user and appr.value is None:
            embed = discord.Embed(title="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –í—Ä–µ–º—è –≤—ã—à–ª–æ!", color=discord.Color.red())
            return await interaction.edit_original_response(embed=embed, view=None)
        elif member == self.bot.user or appr.value:



            class GamePlay(discord.ui.View):
                def __init__(self):
                    super().__init__(timeout=30)
                    self.choice_one = None
                    self.choice_two = None
                    if member == interaction.client.user:
                        choices_one = ['scissors','paper', 'stone']
                        self.choice_two = choice(choices_one)

                @discord.ui.button(emoji="ü™®", style=discord.ButtonStyle.blurple)
                async def stone(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                    if (
                        interaction.user.id == viewinteract.user.id
                        and self.choice_one is None
                    ):
                        embed = discord.Embed(title="–í—ã–±–æ—Ä", color=discord.Color.green(), description="–í—ã –≤—ã–±—Ä–∞–ª–∏ `–∫–∞–º–µ–Ω—å`, –æ–∂–∏–¥–∞–π—Ç–µ –∏—Ç–æ–≥–æ–≤.")
                        await viewinteract.response.send_message(embed=embed, ephemeral=True)
                        self.choice_one = "stone"
                        if self.choice_one != None and self.choice_two != None:
                            self.stop()
                    elif (
                        member.id == viewinteract.user.id
                        and self.choice_two is None
                    ):
                        embed = discord.Embed(title="–í—ã–±–æ—Ä", color=discord.Color.green(), description="–í—ã –≤—ã–±—Ä–∞–ª–∏ `–∫–∞–º–µ–Ω—å`, –æ–∂–∏–¥–∞–π—Ç–µ –∏—Ç–æ–≥–æ–≤.")
                        await viewinteract.response.send_message(embed=embed, ephemeral=True)
                        self.choice_two = "stone"
                        if self.choice_one != None and self.choice_two != None:
                            self.stop()
                    else:
                        return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)

                @discord.ui.button(emoji="‚úÇÔ∏è", style=discord.ButtonStyle.blurple)
                async def scissors(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                    if (
                        interaction.user.id == viewinteract.user.id
                        and self.choice_one is None
                    ):
                        embed = discord.Embed(title="–í—ã–±–æ—Ä", color=discord.Color.green(), description="–í—ã –≤—ã–±—Ä–∞–ª–∏ `–Ω–æ–∂–Ω–∏—Ü—ã`, –æ–∂–∏–¥–∞–π—Ç–µ –∏—Ç–æ–≥–æ–≤.")
                        await viewinteract.response.send_message(embed=embed, ephemeral=True)
                        self.choice_one = "scissors"
                        if self.choice_one != None and self.choice_two != None:
                            self.stop()
                    elif (
                        member.id == viewinteract.user.id
                        and self.choice_two is None
                    ):
                        embed = discord.Embed(title="–í—ã–±–æ—Ä", color=discord.Color.green(), description="–í—ã –≤—ã–±—Ä–∞–ª–∏ `–Ω–æ–∂–Ω–∏—Ü—ã`, –æ–∂–∏–¥–∞–π—Ç–µ –∏—Ç–æ–≥–æ–≤.")
                        await viewinteract.response.send_message(embed=embed, ephemeral=True)
                        self.choice_two = "scissors"
                        if self.choice_one != None and self.choice_two != None:
                            self.stop()
                    else:
                        return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)

                @discord.ui.button(emoji="üìú", style=discord.ButtonStyle.blurple)
                async def paper(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                    if (
                        interaction.user.id == viewinteract.user.id
                        and self.choice_one is None
                    ):
                        embed = discord.Embed(title="–í—ã–±–æ—Ä", color=discord.Color.green(), description="–í—ã –≤—ã–±—Ä–∞–ª–∏ `–±—É–º–∞–≥—É`, –æ–∂–∏–¥–∞–π—Ç–µ –∏—Ç–æ–≥–æ–≤.")
                        await viewinteract.response.send_message(embed=embed, ephemeral=True)
                        self.choice_one = "paper"
                        if self.choice_one != None and self.choice_two != None:
                            self.stop()
                    elif (
                        member.id == viewinteract.user.id
                        and self.choice_two is None
                    ):
                        embed = discord.Embed(title="–í—ã–±–æ—Ä", color=discord.Color.green(), description="–í—ã –≤—ã–±—Ä–∞–ª–∏ `–±—É–º–∞–≥—É`, –æ–∂–∏–¥–∞–π—Ç–µ –∏—Ç–æ–≥–æ–≤.")
                        await viewinteract.response.send_message(embed=embed, ephemeral=True)
                        self.choice_two = "paper"
                        if self.choice_one != None and self.choice_two != None:
                            self.stop()
                    else:
                        return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)


            embed = discord.Embed(title="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –ò–≥—Ä–∞", color=discord.Color.orange(), description="–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥—É. –í—Ä–µ–º—è –Ω–∞ –≤—ã–±–æ—Ä: `30 —Å–µ–∫—É–Ω–¥`.")
            embed.set_footer(text=f"{interaction.user} –∏ {member}", icon_url=interaction.user.display_avatar.url)
            view = GamePlay()
            if member == self.bot.user:
                await interaction.response.send_message(embed=embed, view=view)
            else:
                await interaction.edit_original_response(embed=embed, view=view)
            await view.wait()

            if view.choice_one is None or view.choice_two is None:
                embed = discord.Embed(title="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –í—Ä–µ–º—è –≤—ã—à–ª–æ!", color=discord.Color.red(), description="–û–¥–∏–Ω –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ –≤—ã–±—Ä–∞–ª(-–∞) –ø—Ä–µ–¥–º–µ—Ç!")
                return await interaction.edit_original_response(embed=embed, view=None)
            else:
                choices = {
                    'scissors': "–ù–æ–∂–Ω–∏—Ü—ã",
                    'paper': "–ë—É–º–∞–≥—É",
                    'stone': '–ö–∞–º–µ–Ω—å'
                }
                if view.choice_one == view.choice_two:
                    embed = discord.Embed(title="–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –ù–∏—á—å—è", color=discord.Color.yellow(), description=f"{interaction.user.mention} –∏ {member.mention} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ `{choices[view.choice_one]}`.")
                    embed.set_footer(text="–ù–∏—á—å—è!")
                    return await interaction.edit_original_response(embed=embed, view=None)

                if view.choice_one == "paper" and view.choice_two == "stone":
                    embed = discord.Embed(title=f"–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –ü–æ–±–µ–¥–∞ {interaction.user}!", color=discord.Color.green(), description=f"{interaction.user.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_one]}`.\n{member.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_two]}`.")
                    embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
                    await interaction.edit_original_response(embed=embed, view=None)
                if view.choice_one == "paper" and view.choice_two == "scissors":
                    embed = discord.Embed(title=f"–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –ü–æ–±–µ–¥–∞ {member}!", color=discord.Color.green(), description=f"{interaction.user.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_one]}`.\n{member.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_two]}`.")
                    embed.set_footer(text=str(member), icon_url=member.display_avatar.url)
                    await interaction.edit_original_response(embed=embed, view=None)
                if view.choice_one == "stone" and view.choice_two == "scissors":
                    embed = discord.Embed(title=f"–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –ü–æ–±–µ–¥–∞ {interaction.user}!", color=discord.Color.green(), description=f"{interaction.user.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_one]}`.\n{member.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_two]}`.")
                    embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
                    await interaction.edit_original_response(embed=embed, view=None)

                if view.choice_one == "stone" and view.choice_two == "paper":
                    embed = discord.Embed(title=f"–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –ü–æ–±–µ–¥–∞ {member}!", color=discord.Color.green(), description=f"{interaction.user.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_one]}`.\n{member.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_two]}`.")
                    embed.set_footer(text=str(member), icon_url=member.display_avatar.url)
                    await interaction.edit_original_response(embed=embed, view=None)
                if view.choice_one == "scissors" and view.choice_two == "paper":
                    embed = discord.Embed(title=f"–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –ü–æ–±–µ–¥–∞ {interaction.user}!", color=discord.Color.green(), description=f"{interaction.user.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_one]}`.\n{member.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_two]}`.")
                    embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
                    await interaction.edit_original_response(embed=embed, view=None)
                if view.choice_one == "scissors" and view.choice_two == "stone":
                    embed = discord.Embed(title=f"–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ - –ü–æ–±–µ–¥–∞ {member}!", color=discord.Color.green(), description=f"{interaction.user.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_one]}`.\n{member.mention} –≤—ã–±—Ä–∞–ª(-–∞) `{choices[view.choice_two]}`.")
                    embed.set_footer(text=str(member), icon_url=member.display_avatar.url)
                    await interaction.edit_original_response(embed=embed, view=None)

    @app_commands.command(name='tic-tac-toe', description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏.")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å.")
    async def tictac(self, interaction: discord.Interaction, member: discord.User):
        if interaction.guild is None:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!")
            embed.set_thumbnail(url=interaction.user.avatar.url)
            return await interaction.response.send_message(embed=embed, ephemeral=True)

        if interaction.user.id == member.id:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(),
                                  description="–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        if member.bot:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(),
                                  description="–ë–æ—Ç—É –Ω–µ –¥–æ –∏–≥—Ä, –Ω–µ —Ç—Ä–µ–≤–æ–∂—å –µ–≥–æ!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        emb = discord.Embed(
            title="–ò–≥—Ä–∞ –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏!",
            description=f"{member.mention}, {interaction.user.mention} —Ö–æ—á–µ—Ç —Å –≤–∞–º–∏ –ø–æ–∏–≥—Ä–∞—Ç—å",
            color=discord.Color.green()
        )

        class Accept(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=180)
                self.value = None

            @discord.ui.button(emoji="‚úÖ", style=discord.ButtonStyle.green)
            async def accept(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != member.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                self.value = True
                await viewinteract.response.edit_message(view=None)
                self.stop()

            @discord.ui.button(emoji="<:x_icon:975324570741526568>", style=discord.ButtonStyle.red)
            async def deny(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if interaction.user.id == viewinteract.user.id:
                    embed = discord.Embed(title="–û—Ç–º–µ–Ω–∞!", color=discord.Color.red(),
                                          description="–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∏–≥—Ä—ã –æ—Ç–º–µ–Ω–∏–ª –µ—ë.")
                    await viewinteract.response.edit_message(embed=embed, view=None)
                    self.value = False
                    self.stop()
                elif member.id == viewinteract.user.id:
                    embed = discord.Embed(title="–û—Ç–∫–∞–∑!", color=discord.Color.red(),
                                          description=f"{member.mention} –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∏–≥—Ä—ã.")
                    await viewinteract.response.edit_message(embed=embed, view=None)
                    self.value = False
                    self.stop()
                else:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)

        acc = Accept()
        if not member.bot:
            await interaction.response.send_message(embed=emb, view=acc)
            await acc.wait()
        if acc.value == None:
            await interaction.edit_original_response(
                embed=discord.Embed(
                    title="–í—Ä–µ–º—è –≤—ã—à–ª–æ!",
                    color=discord.Color.red()
                ), 
                view=None
            )
        elif acc.value == True:
            class TicTacToeButton(discord.ui.Button['TicTacToe']):
                def __init__(self, x: int, y: int):
                    super().__init__(style=discord.ButtonStyle.secondary, label='\u200b', row=y)
                    self.x = x
                    self.y = y
                    self.X = interaction.user
                    self.O = member
                async def callback(self, viewinteract: discord.Interaction):
                    assert self.view is not None
                    view: TicTacToe = self.view
                    state = view.board[self.y][self.x]
                    if state in (view.X, view.O):
                        return
                    if view.current_player == view.X and viewinteract.user.id == self.X.id:
                        self.style = discord.ButtonStyle.danger
                        self.label = 'X'
                        self.disabled = True
                        view.board[self.y][self.x] = view.X
                        view.current_player = view.O
                    elif viewinteract.user.id != self.X.id and view.current_player == view.X:
                        await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                    elif view.current_player == view.O and viewinteract.user.id == self.O.id:
                        self.style = discord.ButtonStyle.success
                        self.label = 'O'
                        self.disabled = True
                        view.board[self.y][self.x] = view.O
                        view.current_player = view.X
                    elif viewinteract.user.id != self.O.id:
                        await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                    if view.current_player == view.X:
                        content = f"–¢–µ–ø–µ—Ä—å –æ—á–µ—Ä–µ–¥—å {self.X.mention}"
                    elif view.current_player == view.O:
                        content = f"–¢–µ–ø–µ—Ä—å –æ—á–µ—Ä–µ–¥—å {self.O.mention}"
                    else:
                        content = f"–ü–µ—Ä–≤—ã–π —Ö–æ–¥ –∑–∞ {self.X.mention}"

                    winner = view.check_board_winner()
                    if winner is not None:
                        if winner == view.X:
                            content = f'{self.X.mention} –ø–æ–±–µ–¥–∏–ª!'
                        elif winner == view.O:
                            content = f'{self.O.mention} –ø–æ–±–µ–¥–∏–ª!'
                        else:
                            content = "–ù–∏—á—å—è!"

                        for child in view.children:
                            child.disabled = True

                        view.stop()
                    await viewinteract.response.edit_message(content=content, view=view)

            class TicTacToe(discord.ui.View):
                children: List[TicTacToeButton]
                X = -1
                O = 1
                Tie = 2
                def __init__(self):
                    super().__init__()
                    self.current_player = self.X
                    self.board = [
                        [0, 0, 0],
                        [0, 0, 0],
                        [0, 0, 0],
                    ]
                    for x in range(3):
                        for y in range(3):
                            self.add_item(TicTacToeButton(x, y))
                def check_board_winner(self):
                    for across in self.board:
                        value = sum(across)
                        if value == 3:
                            return self.O
                        elif value == -3:
                            return self.X
                    for line in range(3):
                        value = self.board[0][line] + self.board[1][line] + self.board[2][line]
                        if value == 3:
                            return self.O
                        elif value == -3:
                            return self.X
                    diag = self.board[0][2] + self.board[1][1] + self.board[2][0]
                    if diag == 3:
                        return self.O
                    elif diag == -3:
                        return self.X

                    diag = self.board[0][0] + self.board[1][1] + self.board[2][2]
                    if diag == 3:
                        return self.O
                    elif diag == -3:
                        return self.X
                    if all(i != 0 for row in self.board for i in row):
                        return self.Tie
                    return None

            tictac=TicTacToe()
            await interaction.edit_original_response(embed=discord.Embed(
                title = f"–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏",
                description=f"{interaction.user.mention} (–∫—Ä–µ—Å—Ç–∏–∫) VS {member.mention} (–Ω–æ–ª–∏–∫)",
                color=discord.Color.green()),
                view=tictac
            )
    
    @app_commands.command(name="hangman", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –í–∏—Å–µ–ª–∏—Ü–∞ (–∏–≥—Ä–∞)")
    @app_commands.describe(member="–ò–≥—Ä–æ–∫, —Å –∫–µ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    async def hangman(self, interaction: discord.Interaction, member: discord.User):
        if interaction.guild is None:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!")
            embed.set_thumbnail(url=interaction.user.avatar.url)
            return await interaction.response.send_message(embed=embed, ephemeral=True)

        if interaction.user.id == member.id:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        if member.bot:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ë–æ—Ç—É –Ω–µ –¥–æ –∏–≥—Ä, –Ω–µ —Ç—Ä–µ–≤–æ–∂—å –µ–≥–æ!")
            return await interaction.response.send_message(embed=embed, ephemeral=True) 
        
        class Accept(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=300)
                self.value = None
                self.clicker = None
            
            @discord.ui.button(style=discord.ButtonStyle.green, emoji="‚úÖ")
            async def accept(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if member.id != viewinteract.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                await viewinteract.response.defer()
                self.value = True
                self.stop()
            
            @discord.ui.button(style=discord.ButtonStyle.red, emoji='<:x_icon:975324570741526568>')
            async def deny(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if member.id != viewinteract.user.id and interaction.user.id == viewinteract.user.id:
                    await viewinteract.response.defer()
                    self.value = False
                    self.clicker = interaction.user
                    self.stop()
                elif member.id != viewinteract.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                else:
                    await viewinteract.response.defer()
                    self.value = False
                    self.clicker = member
                    self.stop()
        
        acc = Accept()
        embed = discord.Embed(title="–í–∏—Å–µ–ª–∏—Ü–∞ - –û–∂–∏–¥–∞–Ω–∏–µ", color=discord.Color.orange(), description=f"{member.mention}, {interaction.user.mention} —Ö–æ—á–µ—Ç —Å –≤–∞–º–∏ –ø–æ–∏–≥—Ä–∞—Ç—å!")
        embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed, view=acc)
        await acc.wait()
        if acc.value == False and acc.clicker == member:
            embed = discord.Embed(title="–û—Ç–∫–∞–∑", color=discord.Color.red(), description="–£—á–∞—Å—Ç–Ω–∏–∫ –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∏–≥—Ä—ã!")
            return await interaction.edit_original_response(embed=embed, view=None)
        if acc.value == False and acc.clicker == interaction.user:
            embed = discord.Embed(title="–û—Ç–º–µ–Ω–∞!", color=discord.Color.red(), description="–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∏–≥—Ä—ã –æ—Ç–º–µ–Ω–∏–ª –µ—ë!")
            return await interaction.edit_original_response(embed=embed, view=None)
        if acc.value == None:
            embed = discord.Embed(title="–í—Ä–µ–º—è –≤—ã—à–ª–æ!", color=discord.Color.red())
            return await interaction.edit_original_response(embed=embed, view=None)
        
        class Button(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=90)
            
            @discord.ui.button(label="–ó–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ", style=discord.ButtonStyle.green)
            async def setword(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != interaction.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                class Input(discord.ui.Modal, title="–í–∏—Å–µ–ª–∏—Ü–∞ - –∑–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ"):
                    ans = discord.ui.TextInput(label="–°–ª–æ–≤–æ", max_length=35)
                    async def on_submit(self, modalinteract: discord.Interaction):
                        tryes = 0
                        symbols = []
                        fails = 0
                        word = str(self.ans).lower()
                        game = "-" * len(word)
                        hangman = "–ü—É—Å—Ç–æ"
                        kirillic = "–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è"
                        for i in range(len(word)):
                            if kirillic.find(word[i]) == -1:
                                return await modalinteract.response.send_message("–°—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–∏—Ä–∏–ª–ª–∏—Ü—É!", ephemeral=True)
                        embed = discord.Embed(
                            title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ò–≥—Ä–∞", 
                            color=discord.Color.orange(), 
                            description=f"–°–ª–æ–≤–æ –∑–∞–≥–∞–¥–∞–Ω–æ!\n–°–ª–æ–≤–æ: `{game}` (`{len(game)}` –±—É–∫–≤).\n–í–∏—Å–µ–ª–∏—Ü–∞: `{hangman}`"
                        )

                        man_lst = (
                            "–ü—É—Å—Ç–æ",
                            "„ÉÑ",
                            "(„ÉÑ)",
                            "_(„ÉÑ)",
                            "_(„ÉÑ)_",
                            r"\_(„ÉÑ)_",
                            r"\_(„ÉÑ)_/",
                            r"¬Ø\_(„ÉÑ)_/",
                            r"¬Ø\_(„ÉÑ)_/¬Ø"
                        )

                        class Answer(discord.ui.View):
                            def __init__(self):
                                super().__init__(timeout=None)
                            
                            @discord.ui.button(label="–£–≥–∞–¥–∞—Ç—å –±—É–∫–≤—É", style=discord.ButtonStyle.primary)
                            async def answer(self, buttinteract: discord.Interaction, button: discord.ui.Button):
                                if buttinteract.user.id != member.id:
                                    return await buttinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                                class Letter(discord.ui.Modal, title="–í–∏—Å–µ–ª–∏—Ü–∞ - –æ—Ç–≤–µ—Ç"):
                                    ans = discord.ui.TextInput(label="–ë—É–∫–≤–∞", max_length=1)
                                    async def on_submit(self, modinteract: discord.Interaction):
                                        nonlocal game, hangman, tryes, fails
                                        letter = str(self.ans).lower()
                                        if kirillic.find(letter) == -1:
                                            return await modinteract.response.send_message("–¢–æ–ª—å–∫–æ –∫–∏—Ä–∏–ª–ª–∏—Ü–∞!", ephemeral=True)
                                        if letter in symbols:
                                            return await modinteract.response.send_message(f"–ë—É–∫–≤–∞ `{letter}` —É–∂–µ –±—ã–ª–∞!", ephemeral=True)
                                        symbols.append(letter)
                                        tryes += 1
                                        if word.find(letter) == -1:
                                            fails += 1
                                            hangman = man_lst[fails]
                                            if str(hangman) == r"¬Ø\_(„ÉÑ)_/¬Ø":
                                                embed = discord.Embed(
                                                    title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ü–æ—Ä–∞–∂–µ–Ω–∏–µ",
                                                    color=discord.Color.red(),
                                                    description=f"–°–ª–æ–≤–æ: `{word}`.\n–í–∏—Å–µ–ª–∏—Ü–∞: `{hangman}` (`{fails} / 8` –æ—à–∏–±–æ–∫).\n–ü–æ–ø—ã—Ç–æ–∫: `{tryes}`.\n–ë—É–∫–≤—ã: `{str(symbols).removeprefix('[').removesuffix(']')}`."
                                                )
                                                return await modinteract.response.edit_message(embed=embed, view=None)
                                            embed = discord.Embed(
                                                title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ò–≥—Ä–∞",
                                                color=discord.Color.orange(),
                                                description=f"–°–ª–æ–≤–æ: `{game}` (`{len(game)}` –±—É–∫–≤).\n–í–∏—Å–µ–ª–∏—Ü–∞: `{hangman}` (`{fails} / 8` –æ—à–∏–±–æ–∫).\n–ü–æ–ø—ã—Ç–æ–∫: `{tryes}`.\n–ë—É–∫–≤—ã: `{str(symbols).removeprefix('[').removesuffix(']')}`."
                                            )
                                            await modinteract.response.edit_message(embed=embed)
                                        else:
                                            indexes = []
                                            for i in range(len(word)):
                                                if word[i] == letter:
                                                    indexes.append(i)
                                            for index in indexes:
                                                game = game[:index] + letter + game[index+1:]
                                            if game.find('-') == -1:
                                                embed = discord.Embed(
                                                    title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ü–æ–±–µ–¥–∞",
                                                    color=discord.Color.green(),
                                                    description=f"–°–ª–æ–≤–æ: `{game}`.\n–í–∏—Å–µ–ª–∏—Ü–∞: `{hangman}` (`{fails} / 8` –æ—à–∏–±–æ–∫).\n–ü–æ–ø—ã—Ç–æ–∫: `{tryes}`.\n–ë—É–∫–≤—ã: `{str(symbols).removeprefix('[').removesuffix(']')}`."
                                                )
                                                return await modinteract.response.edit_message(embed=embed, view=None)
                                            embed = discord.Embed(
                                                title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ò–≥—Ä–∞", 
                                                color=discord.Color.orange(),
                                                description=f"–°–ª–æ–≤–æ: `{game}` (`{len(game)}` –±—É–∫–≤).\n–í–∏—Å–µ–ª–∏—Ü–∞: `{hangman}` (`{fails} / 8` –æ—à–∏–±–æ–∫).\n–ü–æ–ø—ã—Ç–æ–∫: `{tryes}`.\n–ë—É–∫–≤—ã: `{str(symbols).removeprefix('[').removesuffix(']')}`."
                                            )
                                            await modinteract.response.edit_message(embed=embed)
                                await buttinteract.response.send_modal(Letter())

                            @discord.ui.button(label="–í–≤–µ—Å—Ç–∏ –≤—Å—ë —Å–ª–æ–≤–æ", style=discord.ButtonStyle.green)
                            async def enterword(self, buttinteract: discord.Interaction, button: discord.ui.Button):
                                nonlocal word
                                if buttinteract.user.id != member.id:
                                    return await buttinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                                class EnterWord(discord.ui.Modal, title="–í–∏—Å–µ–ª–∏—Ü–∞ - –≤–≤–æ–¥ —Å–ª–æ–≤–∞"):
                                    ans = discord.ui.TextInput(label="–°–ª–æ–≤–æ:", min_length=len(word), max_length=len(word))
                                    async def on_submit(self, modinteract: discord.Interaction):
                                        nonlocal word, hangman, game, tryes, symbols, fails
                                        tryes += 1
                                        answer = str(self.ans)
                                        letters = f"\n–ë—É–∫–≤—ã: `{str(symbols).removeprefix('[').removesuffix(']')}`."
                                        if symbols == []:
                                            letters = ""
                                        if answer.lower() != word:
                                            embed = discord.Embed(
                                                title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ü–æ—Ä–∞–∂–µ–Ω–∏–µ",
                                                color=discord.Color.red(),
                                                description=f"–°–ª–æ–≤–æ: `{word}`.\n–í–∏—Å–µ–ª–∏—Ü–∞: `{hangman}` (`{fails} / 8` –æ—à–∏–±–æ–∫).\n–ü–æ–ø—ã—Ç–æ–∫: `{tryes}`.{letters}"
                                            )
                                            await modinteract.response.edit_message(embed=embed, view=None)
                                        else:
                                            embed = discord.Embed(
                                                title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ü–æ–±–µ–¥–∞",
                                                color=discord.Color.green(),
                                                description=f"–°–ª–æ–≤–æ: `{word}`.\n–í–∏—Å–µ–ª–∏—Ü–∞: `{hangman}` (`{fails} / 8` –æ—à–∏–±–æ–∫).\n–ü–æ–ø—ã—Ç–æ–∫: `{tryes}`.{letters}"
                                            )
                                            await modinteract.response.edit_message(embed=embed, view=None)
                                await buttinteract.response.send_modal(EnterWord())
                            
                            @discord.ui.button(label="–°–¥–∞—Ç—å—Å—è", style=discord.ButtonStyle.red)
                            async def giveup(self, buttinteract: discord.Interaction, button: discord.ui.Button):
                                if buttinteract.user.id != member.id:
                                    return await buttinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                                class Sure(discord.ui.View):
                                    def __init__(self):
                                        super().__init__(timeout=30)
                                    
                                    @discord.ui.button(emoji="‚úÖ", style=discord.ButtonStyle.green)
                                    async def okey(self, binteract: discord.Interaction, button: discord.ui.Button):
                                        nonlocal word, hangman, tryes, symbols
                                        if buttinteract.user.id != member.id:
                                            return await buttinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                                        letters = f"\n–ë—É–∫–≤—ã: `{str(symbols).removeprefix('[').removesuffix(']')}`."
                                        if symbols == []:
                                            letters = ""
                                        embed = discord.Embed(
                                            title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ü–æ—Ä–∞–∂–µ–Ω–∏–µ",
                                            color=discord.Color.red(),
                                            description=f"–°–ª–æ–≤–æ: `{word}`.\n–í–∏—Å–µ–ª–∏—Ü–∞: `{hangman}` (`{fails} / 8` –æ—à–∏–±–æ–∫).\n–ü–æ–ø—ã—Ç–æ–∫: `{tryes}`.{letters}"
                                        )
                                        await viewinteract.edit_original_response(embed=embed, view=None)
                                        return await binteract.response.edit_message(view=None)
                                    
                                    @discord.ui.button(emoji="<:x_icon:975324570741526568>", style=discord.ButtonStyle.red)
                                    async def nonono(self, binteract: discord.Interaction, button: discord.ui.Button):
                                        return await binteract.response.edit_message(view=None)
                                
                                embed = discord.Embed(title="–°–¥–∞—Ç—å—Å—è", color=discord.Color.red(), description="–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–∞—Ç—å—Å—è?")
                                await buttinteract.response.send_message(embed=embed, view=Sure(), ephemeral=True)
                            
                        await modalinteract.response.edit_message(embed=embed, view=Answer())
                
                await viewinteract.response.send_modal(Input())
        
        embed = discord.Embed(
            title="–í–∏—Å–µ–ª–∏—Ü–∞ - –ó–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ", 
            color=discord.Color.orange(),
            description=f"{interaction.user.mention} –¥–æ–ª–∂–µ–Ω –∑–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É."
        )
        await interaction.edit_original_response(embed=embed, view=Button())
    
    @app_commands.command(name="coin", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –ë—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É.")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    async def coin(self, interaction: discord.Interaction):
        ans = choice(["–û—Ä—ë–ª", "–†–µ—à–∫–∞"])
        sel = 'a' if ans == "–†–µ—à–∫–∞" else ""
        embed = discord.Embed(title="–ë—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É", color=discord.Color.orange(), description=f"–í–∞–º –≤—ã–ø–∞–ª{sel}: `{ans}`.")
        embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name='russian-roulette', description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞")
    @app_commands.describe(count="–ö–æ–ª-–≤–æ –ø—É–ª—å. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    async def rr(self, interaction: discord.Interaction, count: app_commands.Range[int, 1, 5] = 1):
        shoot = random.randint(0,6)
        if shoot <= count:
            embed = discord.Embed(
                title="–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ - –ü–æ—Ä–∞–∂–µ–Ω–∏–µ", 
                color=discord.Color.red(), 
                description="–í –≥–æ–ª–æ–≤—É –ø—Ä–∏–ª–µ—Ç–µ–ª–∞ –ø—É–ª—è... –ò –∑–∞—á–µ–º —ç—Ç–æ –Ω–∞–¥–æ –±—ã–ª–æ?"
            )
            embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        else:
            embed = discord.Embed(
                title="–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ - –ü–æ–±–µ–¥–∞",
                color=discord.Color.green(),
                description="–ü—É–ª–∏ –Ω–µ –±—ã–ª–æ. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑, —Å—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥ —ç—Ç–æ–π –∑–∞—Ç–µ–µ–π."
            )
            embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed)

    @app_commands.command(name="duel", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –î—É—ç–ª—å —Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º.")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å.")
    async def duel(self, interaction: discord.Interaction, member: discord.User):
        if interaction.guild is None:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!")
            embed.set_thumbnail(url=interaction.user.avatar.url)
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        if interaction.user.id == member.id:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        if member.bot:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ë–æ—Ç—É –Ω–µ –¥–æ –¥—É—ç–ª–µ–π, –Ω–µ —Ç—Ä–µ–≤–æ–∂—å –µ–≥–æ!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        
        class Accept(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=300)
                self.value = None
                self.clicker = None
            
            @discord.ui.button(style=discord.ButtonStyle.green, emoji="‚úÖ")
            async def accept(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if member.id != viewinteract.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                await viewinteract.response.defer()
                self.value = True
                self.stop()
            
            @discord.ui.button(style=discord.ButtonStyle.red, emoji='<:x_icon:975324570741526568>')
            async def deny(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if interaction.user.id == viewinteract.user.id or member.id == viewinteract.user.id:
                    await viewinteract.response.defer()
                    self.value = False
                    self.clicker = viewinteract.user
                    self.stop()
                elif member.id != viewinteract.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
        
        acc = Accept()
        embed = discord.Embed(
            title='–î—É—ç–ª—å - –û–∂–∏–¥–∞–Ω–∏–µ', 
            color=discord.Color.orange(),
            description=f"{member.mention}, {interaction.user.mention} –≤—ã–∑—ã–≤–∞–µ—Ç –≤–∞—Å –Ω–∞ –¥—É—ç–ª—å!"
        )
        embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed, view=acc)
        await acc.wait()
        if acc.value == None:
            embed = discord.Embed(title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!", color=discord.Color.red())
            return await interaction.edit_original_response(embed=embed, view=None)
        if acc.clicker != None:
            if acc.clicker.id == member.id:
                embed = discord.Embed(
                    title="–î—É—ç–ª—å - –û—Ç–∫–∞–∑", 
                    color=discord.Color.red(),
                    description=f"{member.mention} –Ω–µ —Ö–æ—á–µ—Ç –∏–¥—Ç–∏ –Ω–∞ –¥—É—ç–ª—å."
                )
                return await interaction.edit_original_response(embed=embed, view=None)
            if acc.clicker.id == interaction.user.id:
                embed = discord.Embed(
                    title="–î—É—ç–ª—å - –û—Ç–º–µ–Ω–∞",
                    color=discord.Color.red(),
                    description="–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –¥—É—ç–ª–∏ –æ—Ç–º–µ–Ω–∏–ª –µ—ë."
                )
                return await interaction.edit_original_response(embed=embed, view=None)
        
        class GamePlay(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=120)
                self.player = interaction.user
                self.winner = None
                self.tryes = 0
            
            @discord.ui.button(label="–í—ã—Å—Ç—Ä–µ–ª", style=discord.ButtonStyle.green, emoji="üî´")
            async def shoot(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != self.player.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                ans = random.randint(0,7)
                self.tryes += 1
                if ans == 1:
                    self.winner = self.player
                    return self.stop()
                if self.tryes == 15:
                    embed = discord.Embed(
                        title="–î—É—ç–ª—å - –ù–∏—á—å—è",
                        color=discord.Color.yellow(),
                        description=f"{self.player.mention} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª, –Ω–æ –Ω–µ –ø–æ–ø–∞–ª! –í—Å–µ –æ—Å—Ç–∞–ª–∏—Å—å –∂–∏–≤—ã –∏ –∑–¥–æ—Ä–æ–≤—ã!"
                    )
                    embed.add_field(name=f"–í—ã—Å—Ç—Ä–µ–ª–æ–≤ –∑–∞ –∏–≥—Ä—É:", value=f"`{self.tryes}`.")
                    self.winner = 'draw'
                    await viewinteract.response.edit_message(embed=embed, view=None)
                    return self.stop()
                next_player = interaction.user if self.player.id == member.id else member
                embed = discord.Embed(
                    title="–î—É—ç–ª—å - –ò–≥—Ä–∞", 
                    color=discord.Color.orange(),
                    description=f"{self.player.mention} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª, –Ω–æ –Ω–µ –ø–æ–ø–∞–ª. –û—á–µ—Ä–µ–¥—å {next_player.mention}."
                )
                embed.add_field(name=f"–í—ã—Å—Ç—Ä–µ–ª–æ–≤ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –≤ –≤–æ–∑–¥—É—Ö):", value=f'`{self.tryes}`.')
                self.player = next_player
                await viewinteract.response.edit_message(embed=embed)
            
            @discord.ui.button(label="–í—ã—Å—Ç—Ä–µ–ª –≤ –≤–æ–∑–¥—É—Ö", style=discord.ButtonStyle.blurple, emoji="üå´Ô∏è")
            async def tothamoon(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != self.player.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                self.tryes += 1
                if self.tryes == 15:
                    embed = discord.Embed(
                        title="–î—É—ç–ª—å - –ù–∏—á—å—è",
                        color=discord.Color.yellow(),
                        description=f"{self.player.mention} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª, –Ω–æ –Ω–µ –ø–æ–ø–∞–ª! –í—Å–µ –æ—Å—Ç–∞–ª–∏—Å—å –∂–∏–≤—ã –∏ –∑–¥–æ—Ä–æ–≤—ã!"
                    )
                    embed.add_field(name=f"–í—ã—Å—Ç—Ä–µ–ª–æ–≤ –∑–∞ –∏–≥—Ä—É:", value=f"`{self.tryes}`.")
                    self.winner = 'draw'
                    await viewinteract.response.edit_message(embed=embed, view=None)
                    return self.stop()
                next_player = interaction.user if self.player.id == member.id else member
                embed = discord.Embed(
                    title="–î—É—ç–ª—å - –ò–≥—Ä–∞", 
                    color=discord.Color.orange(),
                    description=f"{self.player.mention} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª –≤ –≤–æ–∑–¥—É—Ö. –û—á–µ—Ä–µ–¥—å {next_player.mention}."
                )
                embed.add_field(name=f"–í—ã—Å—Ç—Ä–µ–ª–æ–≤ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –≤ –≤–æ–∑–¥—É—Ö):", value=f'`{self.tryes}`.')
                self.player = next_player
                await viewinteract.response.edit_message(embed=embed)

            @discord.ui.button(label="–°–¥–∞—Ç—å—Å—è", row=1, style=discord.ButtonStyle.red, emoji="üêî")
            async def giveup(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != interaction.user.id and viewinteract.user.id != member.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                class Sure(discord.ui.View):
                    def __init__(self):
                        super().__init__(timeout=30)
                        self.value = None
                    
                    @discord.ui.button(style=discord.ButtonStyle.green, emoji="‚úÖ")
                    async def yes(self, buttinteract: discord.Interaction, button: discord.ui.Button):
                        await buttinteract.response.defer()
                        self.value = True
                        self.stop()
                    
                    @discord.ui.button(style=discord.ButtonStyle.red, emoji="<:x_icon:975324570741526568>")
                    async def no(self, buttinteract: discord.Interaction, button: discord.ui.Button):
                        await buttinteract.response.defer()
                        self.value = False
                        self.stop()
                embed = discord.Embed(
                    title="–î—É—ç–ª—å - –°–¥–∞—Ç—å—Å—è", 
                    color=discord.Color.red(),
                    description="–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–∞—Ç—å—Å—è?"
                )
                view = Sure()
                await viewinteract.response.send_message(embed=embed, view=view, ephemeral=True)
                await view.wait()
                await viewinteract.edit_original_response(view=None)
                if view.value == True:
                    self.winner = interaction.user if viewinteract.user.id == member.id else member
                    self.stop()
        
        embed = discord.Embed(
            title="–î—É—ç–ª—å - –ò–≥—Ä–∞",
            color=discord.Color.orange(),
            description=f"–ü–µ—Ä–≤—ã–º —Å—Ç—Ä–µ–ª—è–µ—Ç {interaction.user.mention}"
        )
        game = GamePlay()
        await interaction.edit_original_response(embed=embed, view=game)
        await game.wait()
        if game.winner == None and game.tryes != 15:
            embed = discord.Embed(title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!", color=discord.Color.red())
            return await interaction.edit_original_response(embed=embed, view=None)
        if game.tryes != 15:
            embed = discord.Embed(
                title=f"–î—É—ç–ª—å - –ü–æ–±–µ–¥–∞ {game.winner}",
                color=discord.Color.green(),
                description=f"`{game.winner}` –≤—ã—Å—Ç—Ä–µ–ª–∏–ª –∏ –ø–æ–ø–∞–ª! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!"
            )
            embed.add_field(name="–í—Å–µ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –≤ –≤–æ–∑–¥—É—Ö):", value=f"`{game.tryes}`")
            await interaction.edit_original_response(embed=embed, view=None)

    @app_commands.command(name="number", description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –£–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    async def whatsnumber(self, interaction: discord.Interaction, member: discord.User = None):
        if interaction.guild is None:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!")
            embed.set_thumbnail(url=interaction.user.avatar.url)
            return await interaction.response.send_message(embed=embed, ephemeral=True) 
        if member != None:
            try:
                member = await interaction.guild.fetch_member(member.id)
            except:
                embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã!")
                embed.set_thumbnail(url=interaction.user.display_avatar.url)
                return await interaction.response.send_message(embed=embed, ephemeral=True)
        if member == None:
            number = random.randint(1,10)
        else:
            if interaction.user.id == member.id:
                embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!")
                return await interaction.response.send_message(embed=embed, ephemeral=True)
            if member.bot:
                embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ë–æ—Ç—É –Ω–µ –¥–æ –∏–≥—Ä, –Ω–µ —Ç—Ä–µ–≤–æ–∂—å –µ–≥–æ!")
                return await interaction.response.send_message(embed=embed, ephemeral=True) 
                
            class Accept(discord.ui.View):
                def __init__(self):
                    super().__init__(timeout=300)
                    self.value = None
                    self.clicker = None
                
                @discord.ui.button(style=discord.ButtonStyle.green, emoji="‚úÖ")
                async def accept(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                    if member.id != viewinteract.user.id:
                        return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                    await viewinteract.response.defer()
                    self.value = True
                    self.stop()
                
                @discord.ui.button(style=discord.ButtonStyle.red, emoji='<:x_icon:975324570741526568>')
                async def deny(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                    if interaction.user.id == viewinteract.user.id or member.id == viewinteract.user.id:
                        await viewinteract.response.defer()
                        self.value = False
                        self.clicker = viewinteract.user
                        return self.stop()
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
            
            acc = Accept()
            embed = discord.Embed(
                title='–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –û–∂–∏–¥–∞–Ω–∏–µ', 
                color=discord.Color.orange(),
                description=f"{member.mention}, {interaction.user.mention} —Ö–æ—á–µ—Ç –ø–æ–∏–≥—Ä–∞—Ç—å —Å –í–∞–º–∏!"
            )
            embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
            await interaction.response.send_message(embed=embed, view=acc)
            await acc.wait()
            if acc.value == None:
                embed = discord.Embed(title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ", color=discord.Color.red())
                return await interaction.edit_original_response(embed=embed, view=None)
            if acc.value == False:
                if acc.clicker.id == interaction.user.id:
                    embed = discord.Embed(
                        title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –û—Ç–º–µ–Ω–∞",
                        color=discord.Color.red(),
                        description="–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∏–≥—Ä—ã –æ—Ç–º–µ–Ω–∏–ª –µ—ë."
                    )
                    return await interaction.edit_original_response(embed=embed, view=None)
                embed = discord.Embed(
                    title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –û—Ç–∫–∞–∑", 
                    color=discord.Color.red(),
                    description="–£—á–∞—Å—Ç–Ω–∏–∫ –æ—Ç–∫–∞–∑–∞–ª—Å—è –∏–≥—Ä–∞—Ç—å —Å –í–∞–º–∏."
                )
                return await interaction.edit_original_response(embed=embed, view=None)
            
            class InputButton(discord.ui.View):
                def __init__(self):
                    super().__init__(timeout=120)
                    self.value = None
                
                @discord.ui.button(label="–ó–∞–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ", style=discord.ButtonStyle.blurple)
                async def inputnumber(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                    if viewinteract.user.id != interaction.user.id:
                        return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                    class InputNumber(discord.ui.Modal, title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –ó–∞–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞"):
                        value = None
                        ans = discord.ui.TextInput(label="–ß–∏—Å–ª–æ:", max_length=2)
                        async def on_submit(self, modalinteract: discord.Interaction):
                            try:
                                self.value = int(str(self.ans))
                            except:
                                return await modalinteract.response.send_message("–í–≤–µ–¥—ë–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º!", ephemeral=True)
                            if self.value < 1 or self.value > 10:
                                self.value = None
                                return await modalinteract.response.send_message("–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç –æ–¥–Ω–æ–≥–æ –¥–æ –¥–µ—Å—è—Ç–∏!", ephemeral=True)
                            await modalinteract.response.defer()
                    modal = InputNumber()
                    await viewinteract.response.send_modal(modal)
                    await modal.wait()
                    self.value = modal.value
                    if self.value != None:
                        self.stop()
            button = InputButton()
            embed = discord.Embed(
                title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –ó–∞–¥–∞—Ç—å —á–∏—Å–ª–æ",
                color=discord.Color.orange(),
                description=f"{interaction.user.mention} –¥–æ–ª–∂–µ–Ω –∑–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç –æ–¥–Ω–æ–≥–æ –¥–æ –¥–µ—Å—è—Ç–∏."
            )
            embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
            await interaction.edit_original_response(embed=embed, view=button)
            await button.wait()
            if button.value == None:
                embed = discord.Embed(title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!", color=discord.Color.red())
                return await interaction.edit_original_response(embed=embed, view=None)
            number = button.value
        tryes = 0
        player = interaction.user if member == None else member
        
        class Button(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=180)
            
            @discord.ui.button(label="–û—Ç–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ", style=discord.ButtonStyle.blurple)
            async def inputanswer(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != player.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                class Input(discord.ui.Modal, title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –û—Ç–≤–µ—Ç"):
                    ans = discord.ui.TextInput(label="–ß–∏—Å–ª–æ:", max_length=2)
                    async def on_submit(self, modalinteract: discord.Interaction):
                        nonlocal number, tryes
                        try:
                            answer = int(str(self.ans))
                        except:
                            return await modalinteract.response.send_message("–í–≤–µ–¥—ë–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º!", ephemeral=True)
                        if answer < 1 or answer > 10:
                            return await modalinteract.response.send_message("–í–≤–µ–¥—ë–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –µ–¥–∏–Ω–∏—Ü—ã –∏–ª–∏ –±–æ–ª—å—à–µ –¥–µ—Å—è—Ç–∏!", ephemeral=True)
                        tryes += 1
                        if answer != number and tryes == 4:
                            embed = discord.Embed(
                                title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –ü–æ—Ä–∞–∂–µ–Ω–∏–µ",
                                color=discord.Color.red(),
                                description=f"**–í–∞—à –æ—Ç–≤–µ—Ç:** `{answer}`.\n**–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:** `{number}`.\n**–ß–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫:** `{tryes} / 4`."
                            )
                            embed.set_footer(text=str(player), icon_url=player.display_avatar.url)
                            return await modalinteract.response.edit_message(embed=embed, view=None)
                        if answer > number:
                            embed = discord.Embed(
                                title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –ò–≥—Ä–∞",
                                color=discord.Color.orange(),
                                description=f"**–í–∞—à –æ—Ç–≤–µ—Ç:** `{answer}`.\n–í–∞—à –æ—Ç–≤–µ—Ç `–±–æ–ª—å—à–µ` –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞.\n**–ß–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫:** `{tryes} / 4`."
                            )
                            embed.set_footer(text=str(player), icon_url=player.display_avatar.url)
                            await modalinteract.response.edit_message(embed=embed)
                        if answer < number:
                            embed = discord.Embed(
                                title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –ò–≥—Ä–∞",
                                color=discord.Color.orange(),
                                description=f"**–í–∞—à –æ—Ç–≤–µ—Ç:** `{answer}`.\n–í–∞—à –æ—Ç–≤–µ—Ç `–º–µ–Ω—å—à–µ` –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞.\n**–ß–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫:** `{tryes} / 4`."
                            )
                            embed.set_footer(text=str(player), icon_url=player.display_avatar.url)
                            await modalinteract.response.edit_message(embed=embed)
                        if answer == number:
                            embed = discord.Embed(
                                title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –ü–æ–±–µ–¥–∞",
                                color=discord.Color.green(),
                                description=f"**–í–∞—à –æ—Ç–≤–µ—Ç:** `{answer}`.\n–í–∞—à –æ—Ç–≤–µ—Ç `—Ä–∞–≤–µ–Ω` –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª–∞.\n**–ß–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫:** `{tryes} / 4`."
                            )
                            embed.set_footer(text=str(player), icon_url=player.display_avatar.url)
                            return await modalinteract.response.edit_message(embed=embed, view=None)
                await viewinteract.response.send_modal(Input())
        
        embed = discord.Embed(
            title="–£–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ - –ò–≥—Ä–∞",
            color=discord.Color.orange(),
            description=f"**–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ**, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É.\n–ß–∏—Å–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç `–æ–¥–Ω–æ–≥–æ –¥–æ –¥–µ—Å—è—Ç–∏` –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.\n**–ß–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫:** `{tryes} / 4`."
        )
        embed.set_footer(text=str(player), icon_url=player.display_avatar.url)
        await interaction.response.send_message(embed=embed, view=Button()) if member == None else await interaction.edit_original_response(embed=embed, view=Button())
        
    @app_commands.command(name='dice', description="[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –°—ã–≥—Ä–∞–π –≤ –∫–æ—Å—Ç–∏ —Å –¥—Ä—É–≥–æ–º.")
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å")
    async def dice(self, interaction: discord.Interaction, member: discord.User):
        if interaction.guild is None:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!")
            embed.set_thumbnail(url=interaction.user.avatar.url)
            return await interaction.response.send_message(embed=embed, ephemeral=True) 
        if member != None:
            try:
                member = await interaction.guild.fetch_member(member.id)
            except:
                embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã!")
                embed.set_thumbnail(url=interaction.user.display_avatar.url)
                return await interaction.response.send_message(embed=embed, ephemeral=True)
        
        if interaction.user.id == member.id:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        if member.bot:
            embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description="–ë–æ—Ç—É –Ω–µ –¥–æ –∏–≥—Ä, –Ω–µ —Ç—Ä–µ–≤–æ–∂—å –µ–≥–æ!")
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        
        class Accept(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=300)
                self.value = None
                self.clicker = None
            
            @discord.ui.button(style=discord.ButtonStyle.green, emoji="‚úÖ")
            async def accept(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if member.id != viewinteract.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                await viewinteract.response.defer()
                self.value = True
                self.stop()
            
            @discord.ui.button(style=discord.ButtonStyle.red, emoji='<:x_icon:975324570741526568>')
            async def deny(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if interaction.user.id == viewinteract.user.id or member.id == viewinteract.user.id:
                    await viewinteract.response.defer()
                    self.value = False
                    self.clicker = viewinteract.user
                    self.stop()
                elif member.id != viewinteract.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
        
        acc = Accept()
        embed = discord.Embed(
            title='–ö–æ—Å—Ç–∏ - –û–∂–∏–¥–∞–Ω–∏–µ', 
            color=discord.Color.orange(),
            description=f"{member.mention}, {interaction.user.mention} —Ö–æ—á–µ—Ç –ø–æ–∏–≥—Ä–∞—Ç—å —Å –≤–∞–º–∏!"
        )
        embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed, view=acc)
        await acc.wait()
        if acc.value == None:
            embed = discord.Embed(title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!", color=discord.Color.red())
            return await interaction.edit_original_response(embed=embed, view=None)
        if acc.clicker != None:
            if acc.clicker.id == member.id:
                embed = discord.Embed(
                    title="–ö–æ—Å—Ç–∏ - –û—Ç–∫–∞–∑", 
                    color=discord.Color.red(),
                    description=f"{member.mention} –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∏–≥—Ä—ã."
                )
                return await interaction.edit_original_response(embed=embed, view=None)
            if acc.clicker.id == interaction.user.id:
                embed = discord.Embed(
                    title="–ö–æ—Å—Ç–∏ - –û—Ç–º–µ–Ω–∞",
                    color=discord.Color.red(),
                    description="–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∏–≥—Ä—ã –æ—Ç–º–µ–Ω–∏–ª –µ—ë."
                )
                return await interaction.edit_original_response(embed=embed, view=None)
        embed = discord.Embed(title="–ö–æ—Å—Ç–∏ - –ò–≥—Ä–∞", color=discord.Color.orange())
        score1 = 0
        score2 = 0
        for i in range(6):
            player1 = random.randint(1,6)
            player2 = random.randint(1,6)
            embed.add_field(
                name=f"–†–∞—É–Ω–¥ {i+1}:",
                value=f"{interaction.user.mention}: {player1} - {member.mention}: {player2}"
            )
            if player1 > player2:
                score1 += 1
            elif player1 < player2:
                score2 += 1
        embed.add_field(name="–ü–æ–±–µ–¥–∏—Ç–µ–ª—å:", value="–ù–∏—á—å—è!") if score1 == score2 else embed.add_field(name="–ü–æ–±–µ–¥–∏—Ç–µ–ª—å:", value=interaction.user.mention if score1 > score2 else member.mention)
        await interaction.edit_original_response(embed=embed, view=None)
    
    @app_commands.command(name="tol", description='[–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è] –ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å.')
    @app_commands.check(checks.interaction_is_not_in_blacklist)
    @app_commands.check(checks.interaction_is_not_shutted_down)
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å.")
    async def tol(self, interaction: discord.Interaction, member: discord.User):
        if member.bot:
            embed = discord.Embed(
                title="–û—à–∏–±–∫–∞!",
                color=discord.Color.red(),
                description="–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å —Å –±–æ—Ç–æ–º!"
            )
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        if member.id == interaction.user.id:
            embed = discord.Embed(
                title="–û—à–∏–±–∫–∞!",
                color=discord.Color.red(),
                description="–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!"
            )
            return await interaction.response.send_message(embed=embed, ephemeral=True)

        class Accept(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=300)
                self.value = None
                self.clicker = None
            
            @discord.ui.button(style=discord.ButtonStyle.green, emoji="‚úÖ")
            async def accept(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if member.id != viewinteract.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                await viewinteract.response.defer()
                self.value = True
                self.stop()
            
            @discord.ui.button(style=discord.ButtonStyle.red, emoji='<:x_icon:975324570741526568>')
            async def deny(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if interaction.user.id == viewinteract.user.id or member.id == viewinteract.user.id:
                    await viewinteract.response.defer()
                    self.value = False
                    self.clicker = viewinteract.user
                    self.stop()
                elif member.id != viewinteract.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
        
        acc = Accept()
        embed = discord.Embed(
            title='–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –û–∂–∏–¥–∞–Ω–∏–µ', 
            color=discord.Color.orange(),
            description=f"{member.mention}, {interaction.user.mention} —Ö–æ—á–µ—Ç –ø–æ–∏–≥—Ä–∞—Ç—å —Å –≤–∞–º–∏!"
        )
        embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed, view=acc)
        await acc.wait()
        if acc.value == None:
            embed = discord.Embed(title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!", color=discord.Color.red())
            return await interaction.edit_original_response(embed=embed, view=None)
        if acc.clicker != None:
            if acc.clicker.id == member.id:
                embed = discord.Embed(
                    title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –û—Ç–∫–∞–∑", 
                    color=discord.Color.red(),
                    description=f"{member.mention} –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∏–≥—Ä—ã."
                )
                return await interaction.edit_original_response(embed=embed, view=None)
            if acc.clicker.id == interaction.user.id:
                embed = discord.Embed(
                    title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –û—Ç–º–µ–Ω–∞",
                    color=discord.Color.red(),
                    description="–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∏–≥—Ä—ã –æ—Ç–º–µ–Ω–∏–ª –µ—ë."
                )
                return await interaction.edit_original_response(embed=embed, view=None)

        history = ""
        is_true = None
        
        class SetWord(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=180)
                self.value = None
            
            @discord.ui.button(label="–ó–∞–¥–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é", style=discord.ButtonStyle.blurple)
            async def setword(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != interaction.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                class Input(discord.ui.Modal, title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –ó–∞–¥–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
                    ans = discord.ui.TextInput(label="–ò—Å—Ç–æ—Ä–∏—è:", max_length=1020, style=discord.TextStyle.long)
                    async def on_submit(self, modalinteract: discord.Interaction):
                        nonlocal history, is_true
                        history = str(self.ans)
                        embed = discord.Embed(
                            title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",
                            color=discord.Color.green(),
                            description="–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞. –ï—Å–ª–∏ –í—ã —É–∂–µ —É–∫–∞–∑–∞–ª–∏, –ø—Ä–∞–≤–¥–∞ –ª–∏ —ç—Ç–æ –∏–ª–∏ –ª–æ–∂—å, —Ç–æ –∏–≥—Ä–∞ –Ω–∞—á–Ω—ë—Ç—Å—è."
                        )
                        await modalinteract.response.send_message(embed=embed, ephemeral=True)
                        if is_true is not None:
                            self.value = True
                            self.stop()
                await viewinteract.response.send_modal(Input())
            
            @discord.ui.button(label="–≠—Ç–æ –ø—Ä–∞–≤–¥–∞", style=discord.ButtonStyle.green)
            async def true(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                nonlocal is_true
                if viewinteract.user.id != interaction.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                is_true = True
                embed = discord.Embed(
                    title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",
                    color=discord.Color.green(),
                    description="–ò—Å—Ç–æ—Ä–∏—è —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–¥–æ–π. –ï—Å–ª–∏ –í—ã —É–∂–µ —É–∫–∞–∑–∞–ª–∏ –∏—Å—Ç–æ—Ä–∏—é, —Ç–æ –∏–≥—Ä–∞ –Ω–∞—á–Ω—ë—Ç—Å—è."
                )
                await viewinteract.response.send_message(embed=embed, ephemeral=True)
                if history != '':
                    self.value = True
                    self.stop()
            
            @discord.ui.button(label="–≠—Ç–æ –ª–æ–∂—å", style=discord.ButtonStyle.red)
            async def false(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                nonlocal is_true
                if viewinteract.user.id != interaction.user.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                is_true = False
                embed = discord.Embed(
                    title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",
                    color=discord.Color.green(),
                    description="–ò—Å—Ç–æ—Ä–∏—è —è–≤–ª—è–µ—Ç—Å—è –ª–æ–∂—å—é. –ï—Å–ª–∏ –í—ã —É–∂–µ —É–∫–∞–∑–∞–ª–∏ –∏—Å—Ç–æ—Ä–∏—é, —Ç–æ –∏–≥—Ä–∞ –Ω–∞—á–Ω—ë—Ç—Å—è."
                )
                await viewinteract.response.send_message(embed=embed, ephemeral=True)
                if history != '':
                    self.value = True
                    self.stop()
        
        game_setup = SetWord()
        embed = discord.Embed(
            title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",
            color=discord.Color.orange(),
            description=f"{interaction.user.mention} –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏ —É–∫–∞–∑–∞—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–∞ –ø—Ä–∞–≤–¥–æ–π –∏–ª–∏ –ª–æ–∂—å—é."
        )
        embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.edit_original_response(embed=embed, view=game_setup)
        await game_setup.wait()
        if game_setup.value is None:
            embed = discord.Embed(
                title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!",
                color=discord.Color.red()
            )
            return await interaction.edit_original_response(embed=embed, view=None)

        class Guessing(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=300)
                self.value = None
            
            @discord.ui.button(label="–≠—Ç–æ –ø—Ä–∞–≤–¥–∞", style=discord.ButtonStyle.green)
            async def itistrue(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != member.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                self.value = True
                self.stop()
                await viewinteract.response.defer()
            
            @discord.ui.button(label="–≠—Ç–æ –ª–æ–∂—å", style=discord.ButtonStyle.red)
            async def itisfalse(self, viewinteract: discord.Interaction, button: discord.ui.Button):
                if viewinteract.user.id != member.id:
                    return await viewinteract.response.send_message("–ù–µ –¥–ª—è —Ç–µ–±—è –∫–Ω–æ–ø–æ—á–∫–∞!", ephemeral=True)
                self.value = False
                self.stop()
                await viewinteract.response.defer()

        answer = Guessing()
        embed = discord.Embed(
            title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –ò–≥—Ä–∞",
            color=discord.Color.orange(),
            description=f"{interaction.user.mention} –∑–∞–¥–∞–ª –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è {member.mention}. –û–Ω –¥–æ–ª–∂–µ–Ω –¥–æ–≥–∞–¥–∞—Ç—å—Å—è, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ª–æ–∂—å—é. –†–∞–∑—Ä–µ—à–µ–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã."
        )
        embed.add_field(name="–ò—Å—Ç–æ—Ä–∏—è:", value=f"\"{history}\"")
        embed.set_footer(text=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.edit_original_response(embed=embed, view=answer)
        await answer.wait()
        if answer.value is None:
            embed = discord.Embed(
                title="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!",
                color=discord.Color.red()
            )
            return await interaction.edit_original_response(embed=embed, view=None)
        truth = "–ü—Ä–∞–≤–¥–∞" if is_true else "–õ–æ–∂—å"
        if answer.value == is_true:
            embed = discord.Embed(
                title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –ü–æ–±–µ–¥–∞",
                color=discord.Color.green(),
                description=f"{member.mention} —É–≥–∞–¥–∞–ª!\n\n–≠—Ç–∞ –∏—Å—Ç–æ—Ä–∏—è: `{truth}`."
            )
            return await interaction.edit_original_response(embed=embed, view=None)
        embed = discord.Embed(
            title="–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å - –ü–æ—Ä–∞–∂–µ–Ω–∏–µ",
            color=discord.Color.red(),
            description=f"{member.mention} –Ω–µ —É–≥–∞–¥–∞–ª!\n\n–≠—Ç–∞ –∏—Å—Ç–æ—Ä–∏—è: `{truth}`."
        )
        await interaction.edit_original_response(embed=embed, view=None)

            
async def setup(bot: commands.Bot):
    await bot.add_cog(Entartaiment(bot))
